(setq = setq)
(is 1 1)
(setq is =)
(+ 1 1 2  4)
(bye)
(unbug)
(is ' ')
(is 'a 'a)
(setq is =)
(setq = setq)
(is 1 1)
(is 1 2)
(setq is =)
(= 1 1)
`(1 2 3)
(setq 1+ 2)
(setq 1 1)
(add1 1)
(de add1 (x) (+ x 1))
(set 'a 1)
setf
(square 4)
(square 3)
(square 2)
(setq square '((x) (* x x)))
(= (quote a) '(a))
(= '(a) '(a))
(= 1 1)
'(a b c d)
(quote a b c d)
(quote . a b c)
'(foo 1)
(foo 1)
(foo)
square
(de foo (x) (* x x))
(foo)
(de foo () (+ 1 1))
(= x 1)
(setq x 2)
'(1 . nil)
(cons 1 nil)
(cons 1 2)
(cddr '(1 2))
(cddr '(1 2 3))
(cdr '(1 2))
'(1 . 2 . 3)
'(a . 2)
(cdr '((x) (* x x)))
(car '((x) (* x x)))
(car '(a b c))
('((x) (* x x)) 3)
'((x) (* x x))
(1 2 3)
'(1 2 4)
"hi"
(print "hi!")
(+ 1 1)
